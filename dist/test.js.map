{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///delegated ./node_modules/three/build/three.module.js from dll-reference vendor","webpack:///delegated ./node_modules/lodash/lodash.js from dll-reference vendor","webpack:///external \"vendor\"","webpack:///./src/three-map-controls.js","webpack:///delegated ./node_modules/tape/index.js from dll-reference vendor","webpack:///./src/test.js","webpack:///delegated ./node_modules/webpack/buildin/global.js from dll-reference vendor"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","vendor","__webpack_exports__","three__WEBPACK_IMPORTED_MODULE_0__","constructor","camera","domElement","options","super","this","undefined","document","enabled","target","minDistance","maxDistance","enableZoom","zoomSpeed","zoomDampingAlpha","initialZoom","enablePan","keyPanSpeed","panDampingAlpha","enableKeys","keys","LEFT","UP","RIGHT","BOTTOM","mouseButtons","ZOOM","MIDDLE","PAN","lodash__WEBPACK_IMPORTED_MODULE_1___default","a","extend","target0","clone","position0","position","zoom0","zoom","_mouse","_finalTargetDistance","_currentTargetDistance","_changeEvent","type","_startEvent","_endEvent","_STATES","NONE","DOLLY","TOUCH_DOLLY","TOUCH_PAN","_state","_panTarget","_panCurrent","_minZoomPosition","_maxZoomPosition","_panStart","_panEnd","_panDelta","_dollyStart","_dollyEnd","_dollyDelta","_camOrientation","_lastMouse","_zoomAlpha","_init","distanceToPoint","Error","intersection","ray","each","orientation","normal","multiplyScalar","intersectPlane","bind","_updateDollyTrack","lerpVectors","Math","abs","lookAt","sub","normalize","_updateZoomAlpha","addEventListener","_onContextMenu","_onMouseDown","_onMouseWheel","_onTouchStart","_onTouchEnd","_onTouchMove","_onKeyDown","update","getZoomAlpha","reset","copy","updateProjectionMatrix","dispatchEvent","offsetMaxZoom","offsetMinZoom","lerp","add","dispose","removeEventListener","_onMouseMove","_onMouseUp","zoomToFit","mesh","localToWorld","geometry","boundingSphere","center","vFOV","fov","PI","hFOV","atan","tan","aspect","sin","min","radius","max","diff","damping_alpha","round","intersect","addVectors","subVectors","_calculateMinZoom","length","_getZoomScale","pow","_panLeft","distance","cameraMatrix","v","setFromMatrixColumn","_panUp","_pan","deltaX","deltaY","element","body","targetDistance","distanceToPlane","clientHeight","matrix","_dollyIn","dollyScale","_cameraOfKnownType","console","warn","_dollyOut","_handleUpdateDollyTrackMouse","event","prevMouse","set","offsetX","clientWidth","offsetY","equals","rc","setFromCamera","_handleMouseDownDolly","_handleMouseDownPan","_handleMouseMoveDolly","y","_handleMouseMovePan","x","_handleMouseUp","cam_pos","map_intersect","_handleMouseWheel","delta","wheelDelta","detail","_handleKeyDown","keyCode","_handleUpdateDollyTrackTouch","centerpoint","dx","touches","pageX","dy","pageY","mouse","_handleTouchStartDolly","sqrt","_handleTouchStartPan","_handleTouchMoveDolly","_handleTouchMovePan","_handleTouchEnd","preventDefault","button","stopPropagation","tape","THREE","_","MapControls","default","log","el","createElement","className","innerText","window","appendChild","onload","PerspectiveCamera","inputEvents","global","_el","key","listener","controls","defaultOpts","Plane","Vector3","advanceFrames","frames","Array","currentDistance","stub","EventStub","data","mouse_x","mouse_y","raycaster","Raycaster","intersectMouse","mouse_pos","Vector2","width","height","initial_cam_pos","t","fail","e","pass","_init_pos","z","end","ok","cam_vec","getWorldDirection","lastDistance","mousewheel","calculated","max_zoom_pos","clientX","clientY","testPanCalibration","new_x","new_y","mousedown","first_intersect","mousemove","second_intersect","correct_z"],"mappings":"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","file":"test.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","module.exports = (__webpack_require__(2))(67);","module.exports = (__webpack_require__(2))(66);","module.exports = vendor;","'use strict';\n\n//Alex Pilafian 2016 - sikanrong@gmail.com\n\nimport * as THREE from 'three'\nimport _ from 'lodash'\n\nclass MapControls extends THREE.EventDispatcher{\n\n        constructor(camera, domElement, options){\n            super();\n\n            this.camera = camera;\n\n            //Object to use for listening for keyboard/mouse events\n            this.domElement = ( domElement !== undefined ) ? domElement : document;\n\n            // Set to false to disable this control (Disables all input events)\n            this.enabled = true;\n\n            // Must be set to instance of THREE.Plane\n            this.target;\n\n            // How far you can dolly in and out\n            this.minDistance = 1; //probably should never be 0\n            this.maxDistance = 100;\n\n            // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n            // Set to false to disable zooming\n            this.enableZoom = true;\n            this.zoomSpeed = 6.0;\n            this.zoomDampingAlpha = 0.1;\n            this.initialZoom = 0; //start zoomed all the way out unless set in options.\n\n            // Set to false to disable panning\n            this.enablePan = true;\n            this.keyPanSpeed = 12.0;\t// pixels moved per arrow key push\n            this.panDampingAlpha = 0.2;\n\n            // Set to false to disable use of the keys\n            this.enableKeys = true;\n\n            // The four arrow keys\n            this.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 };\n\n            // Mouse buttons\n            this.mouseButtons = { ZOOM: THREE.MOUSE.MIDDLE, PAN: THREE.MOUSE.LEFT };\n\n            //Copy options from parameters\n            _.extend(this, options);\n\n            // for reset\n            this.target0 = this.target.clone();\n            this.position0 = this.camera.position.clone();\n            this.zoom0 = this.camera.zoom;\n\n            this._mouse = new THREE.Vector2();\n\n            this._finalTargetDistance;\n            this._currentTargetDistance;\n\n            this._changeEvent = { type: 'change' };\n            this._startEvent = { type: 'start' };\n            this._endEvent = { type: 'end' };\n\n            this._STATES = { NONE : - 1, DOLLY : 1, PAN : 2, TOUCH_DOLLY : 4, TOUCH_PAN : 5 };\n            this._state = this._STATES.NONE;\n\n            this._panTarget = new THREE.Vector3();\n            this._panCurrent = new THREE.Vector3();\n\n            this._minZoomPosition = new THREE.Vector3();\n            this._maxZoomPosition = new THREE.Vector3();\n\n            this._panStart = new THREE.Vector2();\n            this._panEnd = new THREE.Vector2();\n            this._panDelta = new THREE.Vector2();\n\n            this._dollyStart = new THREE.Vector2();\n            this._dollyEnd = new THREE.Vector2();\n            this._dollyDelta = new THREE.Vector2();\n\n            this._camOrientation = new THREE.Vector2();\n            this._lastMouse = new THREE.Vector2();\n\n            this._zoomAlpha;\n\n            this._init();\n        }\n\n        _init (){\n            if(this.target.distanceToPoint(this.camera.position) == 0){\n                throw new Error(\"ORIENTATION_UNKNOWABLE: initial Camera position cannot intersect target plane.\");\n            }\n\n            //establish initial camera orientation based on position w.r.t. _this.target plane\n            var intersection, ray;\n            _.each([-1, 1], function(orientation){\n                if(intersection)\n                    return;\n                ray = new THREE.Ray(this.camera.position, this.target.normal.clone().multiplyScalar(orientation));\n                intersection = ray.intersectPlane(this.target);\n            }.bind(this));\n\n            this._updateDollyTrack(ray);\n\n            this.camera.position.lerpVectors(this._minZoomPosition, this._maxZoomPosition, this.initialZoom);\n            this._finalTargetDistance = this._currentTargetDistance = Math.abs(this.target.distanceToPoint(this.camera.position));\n\n            this.camera.lookAt(this._maxZoomPosition); //set the orientation of the camera towards the map.\n            this._camOrientation = this._maxZoomPosition.clone().sub(this.camera.position).normalize();\n\n            this._updateZoomAlpha();\n\n            //Assign event listeners\n\n            this.domElement.addEventListener( 'contextmenu', this._onContextMenu.bind(this), false );\n\n            this.domElement.addEventListener( 'mousedown', this._onMouseDown.bind(this), false );\n            this.domElement.addEventListener( 'mousewheel', this._onMouseWheel.bind(this), false );\n            this.domElement.addEventListener( 'MozMousePixelScroll', this._onMouseWheel.bind(this), false ); // firefox\n\n            this.domElement.addEventListener( 'touchstart', this._onTouchStart.bind(this), false );\n            this.domElement.addEventListener( 'touchend', this._onTouchEnd.bind(this), false );\n            this.domElement.addEventListener( 'touchmove', this._onTouchMove.bind(this), false );\n\n            this.domElement.addEventListener( 'keydown', this._onKeyDown.bind(this), false );\n\n\n            this.update();\n        }\n\n        getZoomAlpha () {\n            return this._zoomAlpha;\n        }\n\n        reset () {\n\n            this.target.copy( this.target0 );\n            this.camera.position.copy( this.position0 );\n            this.camera.zoom = this.zoom0;\n\n            this.camera.updateProjectionMatrix();\n\n            this._init(); //reinit\n\n            this.dispatchEvent( this._changeEvent );\n\n            this.update();\n\n            this._state = this._STATES.NONE;\n\n        };\n\n        // this method is exposed, but perhaps it would be better if we can make it private...\n        update () {\n            var offsetMaxZoom = new THREE.Vector3();\n            var offsetMinZoom = new THREE.Vector3();\n\n            var position = this.camera.position;\n\n            offsetMaxZoom.copy( this._maxZoomPosition ).sub( this._panCurrent );\n            offsetMinZoom.copy( this._minZoomPosition ).sub( this._panCurrent );\n\n            // move target to panned location\n            this._panCurrent.lerp( this._panTarget, this.panDampingAlpha );\n\n            this._maxZoomPosition.copy( this._panCurrent ).add( offsetMaxZoom );\n            this._minZoomPosition.copy( this._panCurrent ).add( offsetMinZoom );\n\n            position.lerpVectors(this._minZoomPosition, this._maxZoomPosition, this._updateZoomAlpha());\n        }\n\n        dispose () {\n            this.domElement.removeEventListener( 'contextmenu', this._onContextMenu, false );\n            this.domElement.removeEventListener( 'mousedown', this._onMouseDown, false );\n            this.domElement.removeEventListener( 'mousewheel', this._onMouseWheel, false );\n            this.domElement.removeEventListener( 'MozMousePixelScroll', this._onMouseWheel, false ); // firefox\n\n            this.domElement.removeEventListener( 'touchstart', this._onTouchStart, false );\n            this.domElement.removeEventListener( 'touchend', this._onTouchEnd, false );\n            this.domElement.removeEventListener( 'touchmove', this._onTouchMove, false );\n\n            document.removeEventListener( 'mousemove', this._onMouseMove, false );\n            document.removeEventListener( 'mouseup', this._onMouseUp, false );\n\n            this.domElement.removeEventListener( 'keydown', this._onKeyDown, false );\n        };\n\n        zoomToFit (mesh){\n            this._panTarget = mesh.localToWorld(mesh.geometry.boundingSphere.center.clone());\n            var vFOV = this.camera.fov * (Math.PI / 180);\n            var hFOV = 2 * Math.atan( Math.tan( vFOV / 2 ) * this.camera.aspect );\n            var sin = Math.sin(Math.min(hFOV, vFOV) * 0.5);\n            this._finalTargetDistance = (mesh.geometry.boundingSphere.radius / sin);\n        };\n\n        _updateZoomAlpha(){\n            this._finalTargetDistance = Math.max( this.minDistance, Math.min( this.maxDistance, this._finalTargetDistance ) );\n            var diff = this._currentTargetDistance - this._finalTargetDistance;\n            var damping_alpha = this.zoomDampingAlpha;\n            this._currentTargetDistance -= diff * damping_alpha;\n            var rounding_places = 100000;\n            this._zoomAlpha = Math.abs(Math.round((1 - ((this._currentTargetDistance - this.minDistance) / (this.maxDistance - this.minDistance))) * rounding_places ) / rounding_places);\n\n            return this._zoomAlpha;\n        }\n\n        _updateDollyTrack(ray){\n\n            // calculate cameras intersecting the picking ray\n            var intersect = ray.intersectPlane(this.target);\n\n            if(intersect){\n                this._maxZoomPosition.addVectors(intersect, new THREE.Vector3().subVectors(this.camera.position, intersect).normalize().multiplyScalar(this.minDistance));\n                this._minZoomPosition.copy(this._calculateMinZoom(this.camera.position, intersect));\n\n                this._finalTargetDistance = this._currentTargetDistance = intersect.clone().sub(this.camera.position).length();\n            }\n        }\n\n        _getZoomScale() {\n            return Math.pow( 0.95, this.zoomSpeed );\n        }\n\n\n        _panLeft( distance, cameraMatrix ) {\n            var v = new THREE.Vector3();\n\n            v.setFromMatrixColumn( cameraMatrix, 0 ); // get X column of cameraMatrix\n            v.multiplyScalar( - distance );\n\n            this._panTarget.add( v );\n        }\n\n        _panUp ( distance, cameraMatrix ) {\n\n            var v = new THREE.Vector3();\n\n            v.setFromMatrixColumn( cameraMatrix, 1 ); // get Y column of cameraMatrix\n            v.multiplyScalar( distance );\n\n            this._panTarget.add( v );\n\n        }\n\n        // deltaX and deltaY are in pixels; right and down are positive\n        _pan (deltaX, deltaY) {\n\n            var element = this.domElement === document ? this.domElement.body : this.domElement;\n\n            var r = new THREE.Ray(this.camera.position, this._camOrientation);\n            var targetDistance = r.distanceToPlane(this.target);\n\n            // half of the fov is center to top of screen\n            targetDistance *= Math.tan( ( this.camera.fov / 2 ) * Math.PI / 180.0 );\n\n            // we actually don't use screenWidth, since perspective camera is fixed to screen height\n            this._panLeft( 2 * deltaX * targetDistance / element.clientHeight, this.camera.matrix );\n            this._panUp( 2 * deltaY * targetDistance / element.clientHeight, this.camera.matrix );\n\n        }\n\n        _dollyIn( dollyScale ) {\n            if ( this._cameraOfKnownType() ) {\n                this._finalTargetDistance /= dollyScale;\n            } else {\n                console.warn( 'WARNING: MapControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n                this.enableZoom = false;\n            }\n        }\n\n        _dollyOut( dollyScale ) {\n            if ( this._cameraOfKnownType() ) {\n                this._finalTargetDistance *= dollyScale;\n            } else {\n                console.warn( 'WARNING: MapControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n                this.enableZoom = false;\n            }\n        }\n\n        _cameraOfKnownType() {\n            return this.camera.type === 'PerspectiveCamera'\n        }\n\n        _handleUpdateDollyTrackMouse(event){\n            var prevMouse = this._mouse.clone();\n            this._mouse.set(( event.offsetX / this.domElement.clientWidth ) * 2 - 1, - ( event.offsetY / this.domElement.clientHeight ) * 2 + 1);\n\n            if(!prevMouse.equals(this._mouse)){\n                var rc = new THREE.Raycaster();\n                rc.setFromCamera(this._mouse, this.camera);\n                this._updateDollyTrack(rc.ray);\n            }\n        }\n\n        _handleMouseDownDolly( event ) {\n            this._handleUpdateDollyTrackMouse(event);\n            this._dollyStart.set( event.offsetX, event.offsetY );\n        }\n\n        _handleMouseDownPan( event ) {\n\n            this._panStart.set( event.offsetX, event.offsetY );\n\n        }\n\n        _handleMouseMoveDolly( event ) {\n\n            this._handleUpdateDollyTrackMouse(event);\n\n            //console.log( 'handleMouseMoveDolly' );\n\n            this._dollyEnd.set( event.offsetX, event.offsetY );\n\n            this._dollyDelta.subVectors(this._dollyEnd, this._dollyStart );\n\n            if ( this._dollyDelta.y > 0 ) {\n\n                this._dollyIn( this._getZoomScale() );\n\n            } else if ( this._dollyDelta.y < 0 ) {\n\n                this._dollyOut( this._getZoomScale() );\n\n            }\n\n            this._dollyStart.copy( this._dollyEnd );\n\n            this.update();\n\n        }\n\n        _handleMouseMovePan( event ) {\n\n            //console.log( 'handleMouseMovePan' );\n\n            this._panEnd.set( event.offsetX, event.offsetY );\n\n            this._panDelta.subVectors( this._panEnd, this._panStart );\n\n            this._pan( this._panDelta.x, this._panDelta.y );\n\n            this._panStart.copy( this._panEnd );\n\n            this.update();\n\n        }\n\n        _handleMouseUp( event ) {\n\n            //console.log( 'handleMouseUp' );\n\n        }\n\n        _calculateMinZoom(cam_pos, map_intersect){\n            return map_intersect.clone().add(\n                cam_pos.clone()\n                .sub(map_intersect)\n                .normalize()\n                .multiplyScalar(this.maxDistance)\n            );\n        }\n\n\n        _handleMouseWheel( event ) {\n            this._handleUpdateDollyTrackMouse(event);\n\n            var delta = 0;\n\n            if ( event.wheelDelta !== undefined ) {\n\n                // WebKit / Opera / Explorer 9\n\n                delta = event.wheelDelta;\n\n            } else if ( event.detail !== undefined ) {\n\n                // Firefox\n\n                delta = - event.detail;\n\n            }\n\n            if ( delta > 0 ) {\n                this._dollyOut( this._getZoomScale() );\n            } else if ( delta < 0 ) {\n                this._dollyIn( this._getZoomScale() );\n            }\n\n            this.update();\n        }\n\n        _handleKeyDown( event ) {\n\n            //console.log( 'handleKeyDown' );\n\n            switch ( event.keyCode ) {\n\n                case this.keys.UP:\n                    this._pan( 0, this.keyPanSpeed );\n                    this.update();\n                    break;\n\n                case this.keys.BOTTOM:\n                    this._pan( 0, - this.keyPanSpeed );\n                    this.update();\n                    break;\n\n                case this.keys.LEFT:\n                    this._pan( this.keyPanSpeed, 0 );\n                    this.update();\n                    break;\n\n                case this.keys.RIGHT:\n                    this._pan( - this.keyPanSpeed, 0 );\n                    this.update();\n                    break;\n\n            }\n\n        }\n\n        _handleUpdateDollyTrackTouch( event ){\n            var centerpoint = new THREE.Vector2();\n\n            var dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n            var dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n            centerpoint.x = event.touches[ 0 ].pageX + (dx / 2);\n            centerpoint.y = event.touches[ 0 ].pageY + (dy / 2);\n\n            var mouse = new THREE.Vector2();\n            mouse.x = ( centerpoint.x / domElement.clientWidth ) * 2 - 1;\n            mouse.y = - ( centerpoint.y / domElement.clientHeight ) * 2 + 1;\n\n            this._updateDollyTrack(mouse);\n        }\n\n        _handleTouchStartDolly( event ) {\n            this._handleUpdateDollyTrackTouch(event);\n\n            var dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n            var dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n            var distance = Math.sqrt( dx * dx + dy * dy );\n\n            this._dollyStart.set( 0, distance );\n\n        }\n\n        _handleTouchStartPan( event ) {\n\n            //console.log( 'handleTouchStartPan' );\n\n            this._panStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n        }\n\n\n        _handleTouchMoveDolly( event ) {\n            this._handleUpdateDollyTrackTouch(event);\n\n            //console.log( 'handleTouchMoveDolly' );\n\n            var dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n            var dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n            var distance = Math.sqrt( dx * dx + dy * dy );\n\n            this._dollyEnd.set( 0, distance );\n\n            this._dollyDelta.subVectors( this._dollyEnd, this._dollyStart );\n\n            if ( this._dollyDelta.y > 0 ) {\n\n                this._dollyOut( this._getZoomScale() );\n\n            } else if ( this._dollyDelta.y < 0 ) {\n\n                this._dollyIn( this._getZoomScale() );\n\n            }\n\n            this._dollyStart.copy( this._dollyEnd );\n\n            this.update();\n\n        }\n\n        _handleTouchMovePan( event ) {\n\n            this._panEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n            this._panDelta.subVectors( this._panEnd, this._panStart );\n\n            this._pan( this._panDelta.x, this._panDelta.y );\n\n            this._panStart.copy( this._panEnd );\n\n            this.update();\n\n        }\n\n        _handleTouchEnd( event ) {\n            //console.log( 'handleTouchEnd' );\n        }\n\n        //\n        // event handlers - FSM: listen for events and reset state\n        //\n\n        _onMouseDown( event ) {\n\n            if ( this.enabled === false ) return;\n\n            event.preventDefault();\n\n            if ( event.button === this.mouseButtons.ZOOM ) {\n\n                if ( this.enableZoom === false ) return;\n\n                this._handleMouseDownDolly( event );\n\n                this._state = this._STATES.DOLLY;\n\n            } else if ( event.button === this.mouseButtons.PAN ) {\n\n                if ( this.enablePan === false ) return;\n\n                this._handleMouseDownPan( event );\n\n                this._state = this._STATES.PAN;\n\n            }\n\n            if ( this._state !== this._STATES.NONE ) {\n\n                document.addEventListener( 'mousemove', this._onMouseMove.bind(this), false );\n                document.addEventListener( 'mouseup', this._onMouseUp.bind(this), false );\n\n                this.dispatchEvent( this._startEvent );\n\n            }\n\n        }\n\n        _onMouseMove( event ) {\n\n            if ( this.enabled === false ) return;\n\n            event.preventDefault();\n\n            if ( this._state === this._STATES.DOLLY ) {\n\n                if ( this.enableZoom === false ) return;\n\n                this._handleMouseMoveDolly( event );\n\n            } else if ( this._state === this._STATES.PAN ) {\n\n                if ( this.enablePan === false ) return;\n\n                this._handleMouseMovePan( event );\n            }\n        }\n\n        _onMouseUp( event ) {\n\n            if ( this.enabled === false ) return;\n\n            this._handleMouseUp( event );\n\n            document.removeEventListener( 'mousemove', this._onMouseMove, false );\n            document.removeEventListener( 'mouseup', this._onMouseUp, false );\n\n            this.dispatchEvent( this._endEvent );\n\n            this._state = this._STATES.NONE;\n\n        }\n\n        _onMouseWheel( event ) {\n            if ( this.enabled === false || this.enableZoom === false || ( this._state !== this._STATES.NONE ) ) return;\n\n            event.preventDefault();\n            event.stopPropagation();\n\n            this._handleMouseWheel( event );\n\n            this.dispatchEvent( this._startEvent ); // not sure why these are here...\n            this.dispatchEvent( this._endEvent );\n\n        }\n\n        _onKeyDown( event ) {\n\n            if ( this.enabled === false || this.enableKeys === false || this.enablePan === false ) return;\n\n            this._handleKeyDown( event );\n\n        }\n\n        _onTouchStart( event ) {\n\n            if ( this.enabled === false ) return;\n\n            switch ( event.touches.length ) {\n                case 1: // three-fingered touch: pan\n\n                    if ( this.enablePan === false ) return;\n\n                    this._handleTouchStartPan( event );\n\n                    this._state = this._STATES.TOUCH_PAN;\n\n                    break;\n\n                case 2:\t// two-fingered touch: dolly\n\n                    if ( this.enableZoom === false ) return;\n\n                    this._handleTouchStartDolly( event );\n\n                    this._state = this._STATES.TOUCH_DOLLY;\n\n                    break;\n\n                default:\n\n                    this._state = this._STATES.NONE;\n\n            }\n\n            if ( this._state !== this._STATES.NONE ) {\n\n                this.dispatchEvent( this._startEvent );\n\n            }\n\n        }\n\n        _onTouchMove( event ) {\n\n            if ( this.enabled === false ) return;\n\n            event.preventDefault();\n            event.stopPropagation();\n\n            switch ( event.touches.length ) {\n\n                case 1: // one-fingered touch: pan\n                    if ( this.enablePan === false ) return;\n                    if ( this._state !== this._STATES.TOUCH_PAN ) return; // is this needed?...\n\n                    this._handleTouchMovePan( event );\n\n                    break;\n\n                case 2: // two-fingered touch: dolly\n\n                    if ( this.enableZoom === false ) return;\n                    if ( this._state !== this._STATES.TOUCH_DOLLY ) return; // is this needed?...\n\n                    this._handleTouchMoveDolly( event );\n\n                    break;\n\n                default:\n\n                    this._state = this._STATES.NONE;\n\n            }\n\n        }\n\n        _onTouchEnd( event ) {\n\n            if ( this.enabled === false ) return;\n\n            this._handleTouchEnd( event );\n\n            this.dispatchEvent( this._endEvent );\n\n            this._state = this._STATES.NONE;\n\n        }\n\n        _onContextMenu( event ) {\n            event.preventDefault();\n        }\n\n};\n\nexport default MapControls;\n","module.exports = (__webpack_require__(2))(64);","'use strict';\n\nvar tape = require('tape');\nvar THREE = require('three');\nvar _ = require('lodash');\nvar MapControls = require('../src/three-map-controls.js').default;\n\nconsole.log = function(value){\n    var el = document.createElement(\"div\");\n    el.className = \"log\";\n    el.innerText = value;\n    window.document.body.appendChild(el);\n};\nwindow.onload = function () {\n    var el = document.body;\n\n    var camera = new THREE.PerspectiveCamera(45, el.clientWidth / el.clientHeight, 1, 1000);\n\n    var inputEvents = {};\n    _.each([global.document, el], function(_el){\n        _el.addEventListener = function(key, listener){\n            inputEvents[key] = listener;\n        };\n        _el.removeEventListener = function(){};\n    });\n\n    var defaultOpts = {\n        target: new THREE.Plane(new THREE.Vector3(0,0,1), 0),\n        minDistance: 2.0,\n        maxDistance: 20\n    };\n\n    var controls;\n\n    function advanceFrames(frames){\n        _.each(new Array(frames), function(){\n            controls.update();\n        });\n    };\n\n    function currentDistance(){\n        return Math.abs(controls.target.distanceToPoint(camera.position));\n    };\n\n    var stub = function(){};\n\n    function EventStub(data){\n\n        this.preventDefault = stub;\n        this.stopPropagation = stub;\n\n        return _.extend(this, data);\n    };\n\n    var mouse_x = 400;\n    var mouse_y = 300;\n    var raycaster = new THREE.Raycaster();\n\n//raycasts the current mouse position and intersects the target plane\n    var intersectMouse = function(){\n        var mouse_pos = new THREE.Vector2(( mouse_x / el.width ) * 2 - 1, - ( mouse_y / el.height ) * 2 + 1); //NDC\n        raycaster.setFromCamera(mouse_pos, controls.camera);\n        return raycaster.ray.intersectPlane(controls.target);\n    };\n\n    var initial_cam_pos = new THREE.Vector3(3,2,-20); //what it should be, used for comparisons\n\n    tape(\"shouldn't allow initialization if camera intersects plane\", function (t) {\n        try{\n            controls = new MapControls( camera, el, defaultOpts );\n            t.fail('controls created where camera intersects target plane');\n        }catch(e){\n            t.pass('camera cannot intersect target plane on init');\n        }\n\n        var _init_pos = initial_cam_pos.clone();\n        _init_pos.z = -1;\n        camera.position.copy(_init_pos);\n\n        try{\n            controls = new MapControls( camera, el, defaultOpts );\n            t.pass('controls created correctly');\n        }catch(e){\n            t.fail('controls not created successfully');\n        }\n\n        t.end();\n    });\n\n    tape('should initialize with cam at controls.maxDistance by default', function(t){\n        var distance = currentDistance();\n        t.equals(distance, controls.maxDistance);\n        t.equals(controls.getZoomAlpha(), controls.initialZoom);\n\n        t.end();\n    });\n\n    tape(\"shouldn't move from initial position if no input received\", function(t){\n        advanceFrames(10);\n        var distance = currentDistance();\n        t.equals(distance, controls.maxDistance);\n        t.ok(initial_cam_pos.equals(controls.camera.position));\n        t.end();\n    });\n\n    tape(\"should automatically orient camera towards plane based on starting position\", function(t){\n        var cam_vec = camera.getWorldDirection();\n        t.ok(cam_vec.equals(controls.target.normal) || cam_vec.multiplyScalar(-1).equals(controls.target.normal));\n        t.end();\n    });\n\n    tape('should lerp camera towards target plane on mousewheel', function (t) {\n        var lastDistance = currentDistance();\n        inputEvents.mousewheel(new EventStub({wheelDelta: 1}));\n        advanceFrames(1000);\n        var distance = currentDistance();\n        var calculated = lastDistance * Math.pow(0.95, controls.zoomSpeed);\n        t.equals(Math.round(calculated * 1000), Math.round(distance * 1000)); //round both to 3rd decimal place for comparison\n        t.end();\n    });\n\n    tape('should stop zooming at minDistance from target plane', function (t) {\n\n        _.each(new Array(20), function(){\n            inputEvents.mousewheel(new EventStub({wheelDelta: 1}));\n        });\n\n        advanceFrames(1000);\n        var distance = currentDistance();\n        t.equals(Math.round(controls.minDistance * 1000), Math.round(distance * 1000));\n        t.equals(controls.getZoomAlpha(), 1);\n        t.end();\n\n    });\n\n    tape('reset should revert camera to correct initial position', function(t){\n        controls.reset();\n        t.ok(initial_cam_pos.equals(controls.camera.position));\n        t.end();\n    });\n\n    tape('should zoom into mouse pointer', function(t){ //e.g. should act like maps controls.\n        var intersect = intersectMouse();\n\n        //this is where the camera should end up when all-the-way zoomed\n        var max_zoom_pos = new THREE.Vector3().addVectors(intersect, new THREE.Vector3().subVectors(controls.camera.position, intersect).normalize().multiplyScalar(controls.minDistance));\n\n        _.each(new Array(30), function(){\n            inputEvents.mousewheel(new EventStub({\n                wheelDelta: 1,\n                clientX: mouse_x,\n                clientY: mouse_y\n            }));\n        });\n\n        advanceFrames(1000);\n        var tolerance = 0.00001;\n        var delta = Math.abs(new THREE.Vector3().subVectors(max_zoom_pos, controls.camera.position).length());\n\n        t.ok( delta <= tolerance );\n        t.end();\n    });\n\n\n    var testPanCalibration = function(t, new_x, new_y){\n\n        //push mouse button down..\n        inputEvents.mousedown(new EventStub({\n            clientX: mouse_x,\n            clientY: mouse_y,\n            button: controls.mouseButtons.PAN\n        }));\n\n        //record current mouse-target raycast intersection\n        var first_intersect = new THREE.Vector3().subVectors(intersectMouse().multiplyScalar(-1), controls.camera.position);\n\n        //now move mouse...\n        mouse_x = new_x;\n        mouse_y = new_y;\n\n        inputEvents.mousemove(new EventStub({\n            clientX: mouse_x,\n            clientY: mouse_y\n        }));\n\n        advanceFrames(1000);\n\n        //record current mouse-target raycast intersection\n        var second_intersect = new THREE.Vector3().subVectors(intersectMouse().multiplyScalar(-1), controls.camera.position);\n\n        //second_intersect should be the same as first_intersect; e.g. the point in world-space under the mouse should not\n        //have changed during pan operation\n        var tolerance = 0.0001;\n        t.ok(Math.abs(new THREE.Vector3().subVectors(second_intersect, first_intersect).length()) <= tolerance);\n\n    };\n\n    tape('mouse should keep same world coordinates under it during camera pan (pan calibration)', function(t){\n        controls.reset();\n\n        testPanCalibration(t, 400, 500);\n\n        t.end();\n    });\n\n//reset mouse\n    mouse_x = 400;\n    mouse_y = 300;\n\n    tape('initialZoom parameter should set the default cam position correctly', function(t){\n        controls.initialZoom = 0.5;\n        controls.reset();\n\n        var correct_z = initial_cam_pos.z + ((controls.maxDistance - controls.minDistance) / 2);\n        t.equals(controls.camera.position.z, correct_z);\n\n        //try max zoom\n        controls.initialZoom = 1;\n        controls.reset();\n\n        var correct_z = -controls.minDistance;\n        t.equals(controls.camera.position.z, correct_z);\n\n        t.end();\n    });\n\n    tape('pan calibration should hold true when zoomed in', function(t){\n        testPanCalibration(t, 400, 500);\n\n        t.end();\n    });\n};\n","module.exports = (__webpack_require__(2))(7);"],"sourceRoot":""}